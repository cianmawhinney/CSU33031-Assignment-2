version: '3'

services:
  # controller:
  #   build: controller/
  #   networks:
  #     - management

  # node 1
  forwarder_1:
    build:
      context: .
      dockerfile: forwarder/Dockerfile
    networks:
      - management
      - link_1-3
    environment:
      - ROUTING_TABLE_FILE=./node1

  application_1:
    build:
      context: .
      dockerfile: application/Dockerfile
    network_mode: "service:forwarder_1"
    environment:
      - DESTINATION=application_2
      - HOSTNAME=application_1
      

  # node 2
  forwarder_2:
    build:
      context: .
      dockerfile: forwarder/Dockerfile
    networks:
      - management
      - link_2-3
    environment:
      - ROUTING_TABLE_FILE=./node2

  application_2:
    build:
      context: .
      dockerfile: application/Dockerfile
    network_mode: "service:forwarder_2"
    environment:
      - DESTINATION=application_1
      - HOSTNAME=application_2

  # node 3
  forwarder_3:
    build:
      context: .
      dockerfile: forwarder/Dockerfile
    networks:
      - management
      - link_1-3
      - link_2-3
    environment:
      - ROUTING_TABLE_FILE=./node3

  # Traffic capture
  pcap:
    image: corfr/tcpdump
    network_mode: "service:forwarder_3"
    command: -i any -w /data/capture.pcap
    volumes:
      - "./pcap:/data"

networks:
  # used for communication with the controller
  management:
  
  # networks being used as links between nodes in the topology
  link_1-3:
  link_2-3:
  # TODO: more complex topology